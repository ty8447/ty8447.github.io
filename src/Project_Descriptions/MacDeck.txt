<p>The idea of a dynamic macro keyboard has always intrigued me since the release of the Stream Deck. However, while I appreciated its innovative approach to productivity, I found its design lacking in certain areas that were crucial for enhanced control and customization. This project stemmed from my desire to create a device that not only replicates the core functionality of the Stream Deck but also integrates the features I found missing.<br>
<br>
Objective:<br>
My primary goal was to design and build a macro keyboard that offers greater control and customization than existing solutions. This included incorporating additional features that enhance user experience and productivity.<br>
<br>
Backstory:<br>
After using a Stream Deck for several months, I identified a number of areas where it could be improved. These included alternative interactability such as sliders or encoders for volume control and anything that is a range of values, the ability for anyone to customize the product to incorporate it into their own workflow, and the option for a consumer to build the product themselves without spending the full price on the original product. With these enhancements in mind, I embarked on this project to create a superior version tailored to meet my needs.<br>
<br>
Components Used:<br>
<br>
- Arduino Nano RP2040 Connect<br>
- FPC Connectors<br>
- FPC Jumpers<br>
- PEC12R-4215F-N0024 Encoders<br>
- SM Connectors<br>
- GHR Cables<br>
- RA8875 TFT Driver Board<br>
- Micro CD Card Reader<br>
- 40-pin FPC Extension Board<br>
- 5" 40-pin 800x480 TFT Display<br>
- Micro Buttons<br>
- USB C Breakout Board<br>
<br>
This project has been worked on between classes and other projects that have come up and has had many iterations to fix errors in the PCB design and to better work with the hardware that was chosen for this project. The main principle behind this device is that it is a macro keyboard similar to other programmable keyboards but behind each key is a screen that displays an icon coorelating to what the key does. This allows to quickly determine what the key does and add more flexibility to the keyboard itself. <br>
<br>
Goals:<br>
User-Friendly Interface: The device features an intuitive interface that allows for easy customization and configuration of buttons.<br>
High-Quality Build: Using PETG, the device is designed to be durable and comfortable for long-term use.<br>
Advanced Integration: Seamlessly integrates with a variety of software applications, enhancing productivity across different platforms.<br>
<br>
Challenges and Solutions:<br>
Throughout the development process, I encountered several challenges so far relating to hardware cross compatibilty and small mistakes when designing both pcbs. To overcome these, I have drawn up flow charts and connection diagrams to ensure that I am correctly connecting everything and to plan on paper before spending time and money fabricating a PCB for it, which ultimately led to a more robust and reliable product.<br>
<br>
Future Improvements:<br>
Looking ahead, I plan to continue prototyping the controller end of the keyboard with breadboards to ensure that everything can work together, and then from there test the keyboard with the controller to ensure all connections are correct before making the next prototype.</p>